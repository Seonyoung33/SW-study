
<소셜 로그인 처리 방식>

1. 프론트에서 모든 소셜 로그인 처리: 프론트엔드에서 로그인 과정을 모두 처리하여 서버와 상호작용 없이 직접 인증 절차를 완료함.
2. 프론트에서 서버에 Authorization Code 전달: 프론트에서 인가 코드를 발급받고 이를 서버로 전달하여 서버가 토큰을 발급받는 방식
3. 프론트에서 Access Token 발급 후 서버에 전달: 프론트에서 Access Token까지 발급받은 후, 이를 서버에 전달하여 서버가 인증을 완료하는 방식

<우리 프로젝트 방향>

-> 프론트에서 Access Token 발급 후 서버로 전달: 프론트에서 Access Token까지 발급받은 뒤, 이를 서버로 전송해 서버에서 자체 JWT Access Token을 발급받음. 카카오 디벨로퍼스 포럼에 따르면 HTTPS 연결 상에서는 이 방식도 보안에 큰 차이가 없기 때문에, 유연하게 선택할 수 있음.

<구현 계획>
1. 프론트엔드 (React)

1-1. 카카오 인가 코드 받아오기: React에서 카카오 로그인 버튼을 통해 사용자가 로그인하면, 카카오로부터 인가 코드를 받아옵니다.
1-2. Access Token 발급: 받아온 인가 코드를 이용해 카카오 API에 요청을 보내 Access Token을 발급받습니다.
1-3. 서버로 Access Token 전송: 발급받은 Access Token을 HTTP 요청 헤더에 포함하여 백엔드 서버로 전송합니다.

2. 백엔드 (서버)
2-1. Access Token 검증 및 사용자 정보 조회: 서버는 클라이언트가 전송한 Access Token을 통해 카카오 API에서 사용자 정보를 조회합니다.
2-2. 회원 정보 확인 및 처리:
- 기존 회원: 회원 정보가 DB에 있다면 이를 불러와 로그인 처리합니다.
- 신규 회원: 새로운 사용자라면 회원가입 절차를 진행합니다.
- 회원 여부는 ROLE 필드로 구분됩니다.
2-3. JWT Access Token 발급: 서버는 사용자의 회원 정보를 바탕으로 자체 JWT Access Token을 생성해 프론트엔드로 반환합니다.