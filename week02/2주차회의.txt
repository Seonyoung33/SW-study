React Native를 주요 개발 프레임워크로 선택하여 iOS와 Android에서 앱을 동시에 개발. Firebase와 통합하여 실시간 데이터 관리 및 의료 서비스 예약 시스템 운영 목표. 사용자 친화적인 UI/UX 디자인을 기반으로 앱 개발에 착수할 예정.

목표 : 희귀동물 및 반려동물에 대한 종합적인 정보를 제공하고 사용자들이 동물의 건강을 모니터링하며 필요한 의료 서비스를 쉽게 접근할 수 있도록 하는 것.


2. 백엔드 개발

사용자와의 직접적인 상호작용은 없지만 앱의 데이터 처리와 서버 관리에서 중요한 역할을 한다. 사용자가 쉽게 접근할 수 있는 정보와 원활한 의료 서비스 연결을 통해 반려동물의 건강 관리에 기여하는 앱을 완성하는 것이 최종 목표이다. 

 서버 및 데이터베이스 : 사용자 데이터와 건강 기록을 안전하게 저장하고 관리하기 위한 데이터베이스 구조를 설계한다. Firebase를 활용하여 클라우드 기반의 데이터 관리를 통해 데이터 접근성과 보안성을 높인다.
 API 설계 : 프론트엔드와의 원활한 데이터 통신을 위한 RESTful API 구조를 설계한다. API는 사용자의 요청에 따라 데이터를 전달하고 필요한 정보를 클라이언트와 서버 간에 효율적으로 교환할 수 있도록 한다.
  보안 및 데이터 관리 : 사용자 데이터의 보안과 개인 정보 보호는 가장 중요한 요소 중 하나이다. 적절한 암호화 및 인증 메커니즘을 적용하여 데이터의 무결성을 보장하고, 개인정보 유출을 방지한다. 

-> 알아두기☆☆

(1) Firebase 활용
- Firebase의 기본 구조 및 기능 : Firebase Authentication을 통한 사용자 인증 및 권한 관리
- 실시간 데이터베이스 관리 : 실시간 데이터 업데이트 및 동기화 방법에 대해 학습.
- Cloud Functions를 이용한 서버리스 아키텍쳐 이해

(2) API 설계 및 개발
- RESTful API 설계 원칙
- Express.js를 사용한 Node.js 서버 구축

(3) 데이터베이스
- 데이터베이스 모델링 및 쿼리 최적화

(4) 서버 및 호스팅
- 서버 배포 및 관리
- CI/CD 프로세스 : 지속적인 통합 및 배포 과정 이해 및 도구 사용.


3. 개발 환경 및 프레임워크 선택 완료

 Firebase : 실시간 데이터베이스와 사용자 인증, 클라우드 저장소 등 다양한 기능을 제공하여, 백엔드 개발을 보다 쉽게 할 수 있도록 지원한다. 특히, 실시간 데이터 관리를 통해 사용자가 앱을 사용할 때 즉각적인 피드백을 제공할 수 있다.
 Node.js : 서버 사이드 JavaScript 환경으로, 비동기 처리와 높은 성능을 제공하여 API 서버 구축에 적합하다. Express.js와 같은 프레임워크를 사용하면 RESTful API를 쉽게 구축할 수 있다.
 Git/GitHub : 버전 관리와 팀 협업을 위한 도구로 코드 변경 사항을 추적하고 팀원 간의 원활한 협업을 가능하게 한다.